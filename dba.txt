DBA(데이터베이스관리자)란 DB(데이터베이스)의 환경을 책임지는 사람 혹은, 집단(부서)이라고도 할 수 있다.
영어로는 DATA BASE ADMINISTRATOR라고 쓰면 개인을 의미하고 DATA BASE ADMINISTRATION이라고 표현하면 집단이라고 보면 될 듯하다.
 
일반적으로 DB(자료)의 백업 및 복구, 데이터 보전, 보안, 접근제어 및 허가 등은 물론이고 DB의 개발까지도 수행한다.
DBA의 역할은 DB 관리 시스템(DBMS)의 소유자 요구에 따라 바뀌어 간다.
 
전통적으로 로컬 및 물리 DB 설계가 DB 분석가나 DBA의 의무였지만 DBA에게 더 많은 임무들이 주어지고 있다. 
﻿ 
새로운 시스템의 설치, 소프트웨어 구성부터 보안 관리, 자료 분석, DB 예비설계, DB 모델링 및 최적화, 새로운 DB의 분석·설계·작성에 대한 책임, DB 관리자 양성 프로그램, DBA 교육 등으로 IT 산업 발전에 기여하고 있다.


그럼 모든 관리에는 어떤 것들이 속할까요?

[개발 단계]에서는 아래와 같은 일을 합니다.
1. 기획안 분석 후 데이터베이스 관계 모델 설계
2. 테이블 생성 및 프러시저 작성
3. 인덱스, 정규화, 비정규화 등의 튜닝 작업

[운영단계]에서는 아래와 같은 일을 합니다.
1. 데이터베이스 관리
2. 백업

그렇다면 여기에서 데이터베이스 관리에 한 번 더 궁금증이 들어갑니다. 어떤 관리자?
먼저 말하면 데이터베이스가 갑작스러운 사태로 인해 죽는 사태를 사전에 예방하는 역할을 말합니다.
1. 디스크 관리   : 로그를 작성하던 중 디스크 풀로 인해 데이터베이스 장애가 발생할 수 있습니다.
2. CPU 사용률   : CPU 부하가 높은 경우 서버가 내려갈 수 있습니다.
3. 메모리 사용률   : 메모리를 더 이상 사용할 수 없는 경우 oom-killer에 의해 프로세스가 강제 종료될 수 있습니다.
4. 데이터베이스 프로세스 상태 확인    : 프로세스가 정상적인지 확인합니다.



그리고 백업. 백업은 생명이기 때문에 백업 정책을 잘 세워야 합니다.
고객의 데이터는 회사의 자산이며 해당 데이터를 잃을 경우 회사는 문을 닫아야 하니까요.


개발을 시작하고 테스트를 진행하다 보면 처음 기획안에서 수정되는 경우가 많습니다.
예를 들면 칼럼이 추가되거나, 타입에 맞지 않는 데이터가 들어오는 경우를 예로 들 수 있겠죠.
그렇게 되는 경우 관련된 쿼리들을 수정해야 하고, 수정된 걸 가지고 다시 모델링을 하는 경우도 생깁니다.

운영에 들어가게 되고 나서는
서버 상태와 데이터베이스를 모니터링하면서 문제가 발생할 것 같은 부분을 점검 시간에 수정합니다.
crontab에 등록된 스케줄링 스크립트를 확인하여, 데이터베이스가 정상적인지 백업은 잘 되었는지 등등을 확인합니다.


DBA 가 하는 일의 개인적인 생각

위에처럼 DBA는 데이터베이스를 관리하는 직군입니다.
데이터베이스를 관리하기 위해서 데이터베이스와 관련된 지식만 알면 안 됩니다.

스크립트를 작성할 줄을 알아야 하며,
서버 자원에 대한 모니터링 및 튜닝도 할 줄 알아야 하며,
네트워크에 대한 지식도 가지고 있어야 하며,
심지어 요즘에는 클라우드에 대한 지식도 가지고 있어야 합니다.

이와 같은 지식을 전반적으로 가지고 있었을 때, 비로소 DBA 직군에서 일하고 있다고 말할 수 있다 생각합니다.


DBA 의 미래


소규모 회사 같은 경우는 개발자분들이 개발하면서 데이터베이스까지 관리하는 경우가 많지만,
회사의 규모가 점점 커질수록 데이터베이스를 전문적으로 관리하는 DBA 팀을 구성합니다.

요즘에는 "데이터베이스 자동화 툴이 너무 잘되어 있어서, 앞으로 DBA 시장이 위축될 것이다"라는 말도 있습니다.
그럼에도 불구하고 비상시를 대비하여 DBA는 꼭 있어야 합니다.
고객의 데이터를 되살리지 못하는 경우 해당 회사는 문을 닫아야 하니까요.

DataBase Administrator의 약자로, 데이터베이스 관리자를 말합니다.
 
​ DBA 외에도 데이터 아키덱쳐, 모델러, 튜너 가 있지만, 보통 회사에서 이렇게까지 업무를 완전히 세분화하여 DB 업무를 하는 곳은 아직 못 본 것 같네요. 보통 DBA 가 다 하거나, 다른 서버 개발자들과 같이 하는 편입니다.

DBA 없이 서버 개발자분들이 DB 업무를 하는 경우도 있고요.(큰 회사로 갈수록 업무가 세분화되고, 정책적으로 잘 되어 있는 것 같습니다. 그리고, 회사가 어느 정도 규모를 갖춰야 데이터베이스를 전담하는 DBA를 둔다고 보시면 됩니다. 작은 규모의 회사는 서버 개발자가 DB 개발까지 같이 합니다.)
​
제 기준으로 봤을 때 제가 하는 DBA의 업무는

[개발]
1. 게임 프로젝트 기획안 분석 후 데이터베이스 설계 및 모델링.
2. 데이터 입, 출력, 조회 용 프러시저 작성(게임 서버에서 필요한 데이터를 사용하기 위한)
3. ​1,2번이 거의 완료가 되면 튜닝 작업.(인덱스 설정, 정규화, 비정규화 등)
​으로 기본 작업을 수행합니다. 물론, 게임 개발 시 하루에도 몇 번씩 프로젝트 내용이 변경되기 때문에 많은 변경, 수정 작업이 일어납니다.
 
[운영]
1. 백업
2. 데이터베이스 관리
​
DBA의 업무 중 제일 중요한 부분이 백업이라고 생각합니다. 아무래도 데이터베이스 관리자이기 때문에, 데이터가 제일 중요한 게 맞는다는....
그리고, 데이터베이스 서버에 디스크 용량이라든지, CPU 점유율, 메모리 사용량 등을 수시로 체크하며, DB가 뻗지 않도록 신경을 써 줘야 합니다.
위 업무를 잘 하기 위해선 정책적으로 문서를 잘 만들고, 자동으로 체크할 수 있도록 시스템을 잘 만들어 놔야겠죠.
 

개발이 어느 정도 진행이 되면 서버 개발팀에서 테스트를 진행하면서 DB에 데이터를 쌓기 시작합니다.
그러면, 데이터가 정상적으로 들어갔는지 체크하는 일이 추가적으로 생깁니다.
보통, ​클라이언트 <-> 서버 <-> 데이터베이스 식으로 구성이 되는데, 클라이언트나 서버가 보낸 데이터가 정상적으로 저장이 되지 않는 경우 등의 문제가 간혹 발생합니다.
​
예를 들면, 값이 필드에 저장된 값보다 커서 실패한 경우(VARCHAR(30)에 50글자를 넣는 경우),
서버 버그로 클라이언트가 보낸 데이터를 데이터베이스에 보내지 않은 경우(쿼리나 프러시저를 호출하지 않고, 데이터가 왜 없냐고 물어보는 경우도 있습니다.)
​또는, 진짜 쿼리에 버그가 있어서 에러가 발생한 경우 등이 있습니다.
 
 
저는 게임회사이다 보니, 게임 개발 중 수정 사항이 엄청 많이 일어납니다. 처음 기획에서 수정되거나 추가되어버리는 경우가 허다합니다. 테이블에 필드 하나 추가를 시킨다고 하여도 관련 쿼리들을 전부 수정해야 하며, 변경된 요구 사항에 맞게 기존 쿼리를 수정하거나, 완전히 새로 작성하여야 하는 경우도 있습니다. 이런 작업을 능숙하게 처리하면 개인 시간이 많아집니다.
​

다시, 업무로 돌아와서 테스트하면서 쌓인 데이터들을 보면서 최적화 작업 계획을 세웁니다.
​
예를 들면 데이터가 많고, 입출력이 자주 일어나서 감당이 안 될 것 같은 테이블(ex:인벤토리 테이블) 을 체크를 해서, 해당 테이블을  물리적으로, 논리적으로 분할시키는 작업을 하는 경우도 있고요.
데드락 체크를 해서 데드락이 발생되는 테이블을 재 설계하거나, 쿼리를 수정하여 데드락을 회피하게 하여 문제를 해결을 합니다.
​그리고, 누락된 인덱스(Missing Index)를  찾기도 하고, 시간이 오래 걸리는 쿼리를 찾아 수정하기도 합니다.
​
​거의 프로젝트 막바지가 되면,  여러 스크립트를 작성합니다.
테스트 서버에 있는 네이버 베이스를 라이브 서버로 옮기는 스크립트입니다. 테이블을 생성하고, 인덱스를 생성하고, 메타데이터를 넣어주고, 프러시 저들을 생성해 주는 스크립트와
데이터베이스를 관리할 수 있게 해주는 DMV 쿼리(시스템 상태 등을 조회할 수 있는 쿼리. 인덱스 통계, 파일 크기 등을 조회)를 작성합니다.
 
​그리고, 제일 중요한 통계 추출 용 쿼리를 만듭니다. 일일 접속자 수, 매출액, 아이템 판매 수 등 각종 데이터들을 일자, 월별, 시간대 별로 다양하게 추출해야 합니다. 이걸 제대로 추출하기 위해선 설계 단계에서 테이블을 잘 만들어 놓아야 합니다. 이게 왜 중요한가 하면, 이 정보들은 제일 윗선에 보고되거나, 아니면 높으신 분들이 직접 DBA 자리로 와서 직접적으로 물어보시기 때문입니다. 미리 준비해야 할 0순위 스크립트입니다.

그리고, 라이브 서비스를 시작합니다. 이때부터 DBA의 진짜 업무가 시작입니다.
게임이 오픈되고, 유저들이 접속을 하고, 게임을 하고, 아이템을 구매하고, 친구를 초대하고, 해킹 시도를 합니다. ​ 많은 회사 직원분들이 지나가면서 다운로드 수와 매출액, 유저 접속 수를 저에게 묻습니다. 이걸 알 수 있는 사람은 DBA뿐이니깐요. 왠지 뭔가 중요하고, 대단한 사람처럼 느껴지는 기분이 듭니다.
​
미리 작성한 스크립트를 사용하여, 데드락, 누락된 인덱스, 비용 높은 쿼리, 하드디스크 용량, 데이터베이스 용량 증가율 등을 체크하면서 문제가 발생한 부분을 수정할 준비를 합니다. 라이브 서비스 중이기 때문에 바로 수정이 불가하며, 점검 때 수정을 할 수 있도록 테스트 서버에서 수정을 먼저 하고 테스트를 진행합니다.
​

매일 설정한 스케줄을 확인하면서, 백업이 정상적으로 수행되었는지, 스크립트가 정상 실행되었는지 확인을 합니다. DBA의 0순위 업무가 백업 확인입니다.
​
유저 데이터를 체크하여 버그 이용자나 해킹 유저를 찾아냅니다.(게임머니가 엄청 많다든지, 결제 내역이 없는데 캐시를 마구 사용하는 유저, 비정상적으로 높은 레벨, 스탯, 고가의 아이템을 산처럼 쌓아놓은 유저 등)
​
이런 비정상적인 유저를 찾기 위해서는 로그가 중요한데, 로그를 어떻게 남길지도 설계 단계에서 고심을 많이 하고 설계를 하여야 합니다.
​
이렇게 시간이 흐르다 보면, 서비스는 어느 정도 안정이 됩니다. 그리고 데이터베이스 용량은 엄청나게 커져 있습니다. 스크립트를 이용하여 사용되지 않는 데이터들(일정 기간 접속이 없는 유저, 오래된 로그들)을 지우거나, 백업하거나, 다른 곳으로 이동시킵니다.
​​
​이렇게 제가 관리해야 할 데이터베이스는 하나 더 늘었고, 다른 게임 개발 프로젝트도 추가로 시작하게 됩니다.
​
DBA의 경우 보통 한 개의 프로젝트만 참여하지 않고, 여러 프로젝트팀과 업무를 진행합니다.
프로젝트 A, 프로젝트 B, 프로젝트 C 등 3개의 프로젝트에 속해서 DB 업무를 동시에 진행하게 됩니다.
​

이 외에도, DBA 업무는 많이 있으며, 제 기준으로 작성을 하였습니다. 다른 회사의 DBA 분들이 보신다면, 이런 일도 있다고 알려주시면 감사하겠습니다.
​
개발 회사에서 일을 하다가 느낀 건데, 보통 클라이언트 개발자, 서버 개발자라고 부르는데, 데이터베이스 담당자는 개발자가 아닌 관리자(Administrator)로 부르고 있습니다. 나는 쿼리, 프러시저도 작성하고, 스크립트도 작성을 하는데...
 
하지만, 생각해보면 쿼리 개발보다, 관리적은 측면의 업무가 훨씬 더 많은 걸 알 수 있습니다. 백업 정책 수립, 백업, 데이터 검증, 데이터베이스 용량 관리, 성능 관련 튜닝 등
​
그래서, 개발자보다 관리자가 맞구나,라는 생각도 들긴 합니다.
(http://dbguide.net에 가보면 '국가공인 SQL 개발자'라는 자격시험도 있습니다.)
 
 
제가 게임회사에서 근무하면서의 업무를 이야기해 보았습니다. 물론, 다른 회사는 비슷할 수도 다를 수도 있다고 생각됩니다.

1. DBA(Database Administrator)의 정의
   - 데이터베이스 시스템이 원활하게 기능을 수행할 수 있도록 데이터베이스 구성 및
     관리 운영 전반에 대한 책임을 가지고 직무를 수행하는 자

2. DBA의 필요성
   가. 데이터 자원에 대한 중재 기능을 수행하기 위해 출현
       1) 자원이 공유되는 경우, 자원 사용에 대한 사용자 간 갈등은 필연적으로 발생
       2) 데이터 아이템의 명칭과 그 정의
          - 같은 소속 부서 아이템을 어떤 사용자는 부서 번호(Dept number)로 명명하고
            다른 사용자는 팀 반호(Team number)로 명명
       3) 데이터에 대한 서로 다른 접근 방식을 주장
          - 한쪽에서는 해당 부품들의 기능적 분류에 따라 접근할 것을 주장하고
          - 다른 한쪽에서는 공급자별 분류에 따를 것을 주장
          - 데이터에 대한 여러 가지의 접근 경로가 수립 a 시스템의 전반적 성능이 저하
       4) 조직 간 정보시스템을 사용하는 경우 범 조직적 기준이 개발되고 이행되어야 함

나. 중재 기능을 수행하기 위해 요구되는 전문가적 지식과 경험
       1) 관리적, 정책적인 사항
          - DB 사용자들과 효율적 의사소통을 하는데 필요
          - 외부 스키마 및 개념 스키마를 정의하는 기본적인 책임
       2) 데이터베이스의 기술적 부분
          - DB 상세설계, DB의 효율적 사용을 위한 기술적 지원
          - 내부 스키마를 정의하는 기본적인 책임

3. 데이터베이스 관리자(DBA)의 주요 역할(책임)
   1) DBMS 설계와 조작의 책임
      - 데이터베이스의 구성요소 결정
      - 스키마를 정의
      - 저장 구조와 액세스 방법
      - 보안 및 권한부여 정책
      - 데이터의 유효성 검사 방법을 수립
      - 백업, 회복 절차를 정함
      - 무결성을 유지하기 위한 대책 수립
      - 시스템의 성능 향상
      - 새로운 요구 사항에 대응한 DB 재구성
      - 데이터 사전의 조직, 액세스, 유지관리
   2) 행정적 책임
     - 데이터의 표현이나 문서화 표준 설정, 시행
     - 사용자의 요구와 불평 해결
   3) 시스템 감독 및 분석 책임
     - 시스템 성능 모니터링
     - 각종 통계를 종합 분석

4. 데이터베이스 관리자(DBA)의 자격요건
   가. Application의 이해
       - Application을 Tuning 하기 위해서는 프로그램의 기본적인 처리 Routine 이해 능력
   나. 시스템 구성 상태 이해
       - Load balancing 기능을 수행하기 위해서는 시스템 구성 상태를 명확하게 이해
       - 시스템이 제공하는 파일시스템의 구조를 이해
   다. 업무팀과의 인화 능력(협상 능력)
       - 업무처리 시 발생할 수 있는 오해와 마찰을 방지하고 해결할 수 있는 능력

벤더 지원 DBA가 아닌, DBMS를 활용하는 DBA의 필요 SKILL 위주로 나열해 보았습니다.
자기가 추구하는 DBA가 어떤 DBA냐에 따라 각 항목별로 조금씩 다른 선택을 해야 할 거라 생각됩니다.
 
1. Multi-DBMS(설치, 아키텍처, 특징, 기능, 성능, 이중화, 설계, 구축)
   - 외산 : Oracle, DB2, Sybase, MySql, MS-SQL Server 등
   - 국산 : Cubrid, Altibase, Tibero 등
   - MMDBMS, DRDBMS



