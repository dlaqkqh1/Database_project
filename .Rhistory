g+geom_bar()
g<-ggplot(data=q, aes(x=1:6, y = hi))
q
g
g<-ggplot(data=q, aes(x=1:6, y = 1))
g
2
g<- ggplot(data=iris, aes(x = Sepal.Length, y = Sepal.Width))
1
ggplot(df, aes(x=team))+geom_bar(fill="dark blue")
1
ggplot(df, aes(x=team))+geom_bar(fill="dark blue")
df
str(df)
for (i in 1:7) {
i<-i*i
}
i
source('D:/R/source/Dice.R', echo=TRUE)
po
pop
stack(1)
stack(names(i), lenghts(10))
stack(names(i,a), lenghts(10))
stack(names(i,a), lenghts())
stack(names(i,a), lenghts(2))
stack(names(i), lenghts(1,2,3))
source('D:/R/source/Dice.R', echo=TRUE)
source('D:/R/source/Dice.R', echo=TRUE)
str(baseball)
baseball
head(baseball)
baseddply
ddply
rep(1,time=5)
seq(from = 0, to = 20, length.out = 5)
seq(from = 0, to = 20)
seq(from = 0, to = 100, length.out = 5)
seq(from = 0, to = 100, length.out = 3)
seq(from = 0, to = 100, length.out = 4)
rep(1:4,each = 2)
A<-paste("a","b","c",sep = "-")
a
A
pate(A,c("e","f"))
paste(A,c("e","f"))
mena
mean
mean(9,10,11)
mean(9,10)
mean(1,2,3,4,5)
mean(c(1,2,3,4,5))
ls
ls()
rm()
rm(all)
pi
b[1]
b[1];
b[1]; b["empno"]
b[1]; b["empno"]
b[[j]]; b[["empno"]]
a<-1:9
a
dim(a)
a
dim(a)<-c(3,3)
a
dima(a)<-c(1,3,3)
dim(a)<-c(1,3,3)
a
L<-list(1,22,3)
L
L$1
1$L
L[1]
L[[1]]
L[[3]]
L[[2]]
L[2
]
L<-list(c("hi","bye"))
L
L[1]
L[[1]]
L[["hi"]]
L[["1"]]
L[["1"]]
L[[1]]
L[["hi"]]
L[["1"]]
L[["ewfe"]]
install.packages('KoNLP')
Sys.setenv(JAVA_HOME='C:/Program Files/Java/jre1.8.0_144')
install.packages('worcloud')
install.packages('wordcloud')
install.packages('RColorBrewer')
noun
Sys.setenv(JAVA_HOME='C:/Program Files/Java/jre1.8.0_144')
library(KoNLP) # 라이브러리 등록
library(wordcloud) # 라이브러리 등록
library(RColorBrewer) # 라이브러리 등록
#useSejongDic() # 세종 한글사전 로딩
buildDictionary(ext_dic = "woorimalsam") # 사전 로딩
Sys.setenv(JAVA_HOME='C:/Program Files/Java/jre1.8.0_144')
library(KoNLP) # 라이브러리 등록
library(wordcloud) # 라이브러리 등록
library(RColorBrewer) # 라이브러리 등록
#useSejongDic() # 세종 한글사전 로딩
buildDictionary(ext_dic = "woorimalsam") # 사전 로딩
pal2 <- brewer.pal(8, "Dark2") # 팔레트 생성
text <- readLines(file.choose()) # 파일읽기
noun <- sapply(text,extractNoun, USE.NAMES=F) # 단어 집합
noun
Sys.setenv(JAVA_HOME='C:/Program Files/Java/jre1.8.0_144')
library(KoNLP) # 라이브러리 등록
library(wordcloud) # 라이브러리 등록
library(RColorBrewer) # 라이브러리 등록
#useSejongDic() # 세종 한글사전 로딩
buildDictionary(ext_dic = "woorimalsam") # 사전 로딩
pal2 <- brewer.pal(8, "Dark2") # 팔레트 생성
text <- readLines(file.choose()) # 파일읽기
noun <- sapply(text,extractNoun, USE.NAMES=F) # 단어 집합
noun
Sys.setenv(JAVA_HOME='C:/Program Files/Java/jre1.8.0_144')
library(KoNLP) # 라이브러리 등록
library(wordcloud) # 라이브러리 등록
library(RColorBrewer) # 라이브러리 등록
#useSejongDic() # 세종 한글사전 로딩
buildDictionary(ext_dic = "woorimalsam") # 사전 로딩
pal2 <- brewer.pal(8, "Dark2") # 팔레트 생성
text <- readLines(file.choose()) # 파일읽기
noun <- sapply(text,extractNoun, USE.NAMES=F) # 단어 집합
noun
Sys.setenv(JAVA_HOME='C:/Program Files/Java/jre1.8.0_144')
library(KoNLP) # 라이브러리 등록
library(wordcloud) # 라이브러리 등록
library(RColorBrewer) # 라이브러리 등록
#useSejongDic() # 세종 한글사전 로딩
buildDictionary(ext_dic = "woorimalsam") # 사전 로딩
pal2 <- brewer.pal(8, "Dark2") # 팔레트 생성
text <- readLines(file.choose()) # 파일읽기
noun <- sapply(text,extractNoun, USE.NAMES=F) # 단어 집합
noun
noun2 <- unlist(noun) # 명사를 합쳐 색출
wordcount <- table(noun2) # 단어 출현 수 계산
temp <- sort(wordcount, decreasing=T)[1:10] # 단어 정렬
temp # 확인
temp <- temp[-1] # 공백단어 제거
barplot(temp, las = 2, names.arg = names(temp), # 그래프 출력
col ="lightblue", main ="Most frequent words", # 축, 제목 입력
ylab = "Word frequencies") # 축 입력
wordcloud(names(wordcount), # 단어들
freq=wordcount, # 단어들의 빈도
scale=c(6,0.7), # 단어의 폰트 크기
min.freq=3, # 단어의 최소빈도
random.order=F, # 단어의 출력위치
rot.per=.1, # 90도회전 단어 비율
colors=pal2) # 단어색
Sys.setenv(JAVA_HOME='C:/Program Files/Java/jre1.8.0_144')
library(KoNLP) # 라이브러리 등록
library(wordcloud) # 라이브러리 등록
library(RColorBrewer) # 라이브러리 등록
#useSejongDic() # 세종 한글사전 로딩
buildDictionary(ext_dic = "woorimalsam") # 사전 로딩
pal2 <- brewer.pal(8, "Dark2") # 팔레트 생성
text <- readLines(file.choose()) # 파일읽기
noun <- sapply(text,extractNoun, USE.NAMES=F) # 단어 집합
noun
noun2 <- unlist(noun) # 명사를 합쳐 색출
wordcount <- table(noun2) # 단어 출현 수 계산
temp <- sort(wordcount, decreasing=T)[1:10] # 단어 정렬
temp # 확인
temp <- temp[-1] # 공백단어 제거
barplot(temp, las = 2, names.arg = names(temp), # 그래프 출력
col ="lightblue", main ="Most frequent words", # 축, 제목 입력
ylab = "Word frequencies") # 축 입력
wordcloud(names(wordcount), # 단어들
freq=wordcount, # 단어들의 빈도
scale=c(6,0.7), # 단어의 폰트 크기
min.freq=3, # 단어의 최소빈도
random.order=F, # 단어의 출력위치
rot.per=.1, # 90도회전 단어 비율
colors=pal2) # 단어색
barplot(temp, las = 2, names.arg = names(temp), # 그래프 출력
col ="lightblue", main ="Most frequent words", # 축, 제목 입력
ylab = "Word frequencies") # 축 입력
wordcloud(names(wordcount), # 단어들
freq=wordcount, # 단어들의 빈도
scale=c(5,0.6), # 단어의 폰트 크기
min.freq=3, # 단어의 최소빈도
random.order=F, # 단어의 출력위치
rot.per=.1, # 90도회전 단어 비율
colors=pal2) # 단어색
noun2 <- unlist(noun) # 명사를 합쳐 색출
wordcount <- table(noun2) # 단어 출현 수 계산
temp <- sort(wordcount, decreasing=T)[1:10] # 단어 정렬
temp # 확인
temp <- temp[-1] # 공백단어 제거
barplot(temp, las = 2, names.arg = names(temp), # 그래프 출력
col ="lightblue", main ="Most frequent words", # 축, 제목 입력
ylab = "Word frequencies") # 축 입력
noun <- sapply(text,extractNoun, USE.NAMES=F) # 단어 집합
text <- readLines(file.choose(), encoding = 'utf-8') # 파일읽기
noun <- sapply(text,extractNoun, USE.NAMES=F) # 단어 집합
noun
noun2 <- unlist(noun) # 명사를 합쳐 색출
wordcount <- table(noun2) # 단어 출현 수 계산
temp <- sort(wordcount, decreasing=T)[1:10] # 단어 정렬
temp # 확인
temp <- temp[-1] # 공백단어 제거
barplot(temp, las = 2, names.arg = names(temp), # 그래프 출력
col ="lightblue", main ="Most frequent words", # 축, 제목 입력
ylab = "Word frequencies") # 축 입력
wordcloud(names(wordcount), # 단어들
freq=wordcount, # 단어들의 빈도
scale=c(5,0.6), # 단어의 폰트 크기
min.freq=3, # 단어의 최소빈도
random.order=F, # 단어의 출력위치
rot.per=.1, # 90도회전 단어 비율
colors=pal2) # 단어색
Sys.setenv(JAVA_HOME='C:/Program Files/Java/jre1.8.0_144')
library(KoNLP) # 라이브러리 등록
library(wordcloud) # 라이브러리 등록
library(RColorBrewer) # 라이브러리 등록
#useSejongDic() # 세종 한글사전 로딩
buildDictionary(ext_dic = "woorimalsam") # 사전 로딩
pal2 <- brewer.pal(8, "Dark2") # 팔레트 생성
text <- readLines(file.choose(), encoding = 'utf-8') # 파일읽기
noun <- sapply(text,extractNoun, USE.NAMES=F) # 단어 집합
noun
noun2 <- unlist(noun) # 명사를 합쳐 색출
wordcount <- table(noun2) # 단어 출현 수 계산
temp <- sort(wordcount, decreasing=T)[1:10] # 단어 정렬
temp # 확인
temp <- temp[-1] # 공백단어 제거
barplot(temp, las = 2, names.arg = names(temp), # 그래프 출력
col ="lightblue", main ="Most frequent words", # 축, 제목 입력
ylab = "Word frequencies") # 축 입력
wordcloud(names(wordcount), # 단어들
freq=wordcount, # 단어들의 빈도
scale=c(5,0.6), # 단어의 폰트 크기
min.freq=3, # 단어의 최소빈도
random.order=F, # 단어의 출력위치
rot.per=.1, # 90도회전 단어 비율
colors=pal2) # 단어색
Sys.setenv(JAVA_HOME='C:/Program Files/Java/jre1.8.0_144')
library(KoNLP) # 라이브러리 등록
library(wordcloud) # 라이브러리 등록
library(RColorBrewer) # 라이브러리 등록
#useSejongDic() # 세종 한글사전 로딩
buildDictionary(ext_dic = "woorimalsam") # 사전 로딩
pal2 <- brewer.pal(8, "Dark2") # 팔레트 생성
text <- readLines(file.choose(), encoding = 'UTF-8') # 파일읽기
noun <- sapply(text,extractNoun, USE.NAMES=F) # 단어 집합
noun
noun2 <- unlist(noun) # 명사를 합쳐 색출
wordcount <- table(noun2) # 단어 출현 수 계산
temp <- sort(wordcount, decreasing=T)[1:10] # 단어 정렬
temp # 확인
temp <- temp[-1] # 공백단어 제거
barplot(temp, las = 2, names.arg = names(temp), # 그래프 출력
col ="lightblue", main ="Most frequent words", # 축, 제목 입력
ylab = "Word frequencies") # 축 입력
wordcloud(names(wordcount), # 단어들
freq=wordcount, # 단어들의 빈도
scale=c(5,0.6), # 단어의 폰트 크기
min.freq=3, # 단어의 최소빈도
random.order=F, # 단어의 출력위치
rot.per=.1, # 90도회전 단어 비율
colors=pal2) # 단어색
setwd("D:\\jupyter\\data\\Database_project")
list.files()
data <- readLines("dba.txt")
data <- readLines("dba.txt", encoding = 'UTF-8')
head(data)
useSejongDic()
#useSejongDic() # 세종 한글사전 로딩
buildDictionary(ext_dic = "woorimalsam") # 사전 로딩
data <- sapply(data, extractNoun, USE.NAMES = F)
data_unlist <- unlist(data)
head(data_unlist)
wordcount <- table(data_unlist)
head(wordcount)
wordcount_top <-head(sort(wordcount, decreasing = T),10)
wordcount_top
wordcloud(names(wordcount_top), wordcount_top)
wordcount_top <-head(sort(wordcount, decreasing = T),20)
wordcloud(names(wordcount_top), wordcount_top)
mergeUserDic(data.frame(c("튜닝"), "ncn"))
data <- sapply(data, extractNoun, USE.NAMES = F)
data_unlist <- unlist(data)
wordcount <- table(data_unlist)
wordcount_top <-head(sort(wordcount, decreasing = T),20)
wordcloud(names(wordcount_top), wordcount_top)
data_unlist <- Filter(function(x){nchar(x)>=2}, data_unlist)
data_unlist <- gsub("DBA", "", data_unlist)
data_unlist<- gsub('[~!@#$%&*()_+=?<>]','',data_unlist)
data_unlist <- gsub('[ㄱ-ㅎ]','',data_unlist)
data_unlist<- gsub('(ㅜ|ㅠ)','',data_unlist)
data_unlist <- gsub("\\d+","",data_unlist)
data_unlist <- Filter(function(x){nchar(x)>=2}, data_unlist)
data_unlist <- Filter(function(x){nchar(x)>=2}, data_unlist)
data_unlist
wordcount <- table(data_unlist)
wordcount
wordcount_top <-head(sort(wordcount, decreasing = T),20)
wordcloud_top
wordcount_top
wordcloud(names(wordcount_top), wordcount_top)
color <- brewer.pal(12, "Set3")
wordcloud(names(wordcount_top), wordcount_top)
wordcloud(names(wordcount_top), wordcount_top, scale=c(5,0.5),random.order = FALSE, random.color = TRUE, colors = color, family = "font")
Sys.setenv(JAVA_HOME='C:/Program Files/Java/jre1.8.0_144')
library(KoNLP) # 라이브러리 등록
library(wordcloud) # 라이브러리 등록
library(RColorBrewer) # 라이브러리 등록
mergeUserDic(data.frame(c("튜닝"), "ncn"))
data <- readLines("dba.txt", encoding = 'UTF-8')
#useSejongDic() # 세종 한글사전 로딩
buildDictionary(ext_dic = "woorimalsam") # 사전 로딩
data <- sapply(data, extractNoun, USE.NAMES = F)
data_unlist <- unlist(data)
data_unlist <- Filter(function(x){nchar(x)>=2}, data_unlist)
data_unlist <- gsub("DBA", "", data_unlist)
data_unlist<- gsub('[~!@#$%&*()_+=?<>]','',data_unlist)
data_unlist <- gsub('[ㄱ-ㅎ]','',data_unlist)
data_unlist<- gsub('(ㅜ|ㅠ)','',data_unlist)
data_unlist <- gsub("\\d+","",data_unlist)
data_unlist <- Filter(function(x){nchar(x)>=2}, data_unlist)
wordcount_top <-head(sort(wordcount, decreasing = T),20)
data_unlist <- Filter(function(x){nchar(x)>=2}, data_unlist)
wordcount <- table(data_unlist)
color <- brewer.pal(12, "Set3")
wordcloud(names(wordcount_top), wordcount_top, scale=c(5,0.5),random.order = FALSE, random.color = TRUE, colors = color, family = "font")
wordcount_top <-head(sort(wordcount, decreasing = T),20)
wordcloud(names(wordcount_top), wordcount_top)
wordcloud(names(wordcount_top), wordcount_top, scale=c(5,0.5),random.order = FALSE, random.color = TRUE, colors = color, family = "font")
color <- brewer.pal(12, "Set2")
wordcloud(names(wordcount_top), wordcount_top, scale=c(5,0.5),random.order = FALSE, random.color = TRUE, colors = color, family = "font")
wordcount_top <-head(sort(wordcount, decreasing = T),50)
wordcloud(names(wordcount_top), wordcount_top, scale=c(5,0.5),random.order = FALSE, random.color = TRUE, colors = color, family = "font")
data_unlist <- gsub("데이터", "", data_unlist)
data_unlist <- Filter(function(x){nchar(x)>=2}, data_unlist)
wordcount <- table(data_unlist)
color <- brewer.pal(12, "Set2")
wordcount_top <-head(sort(wordcount, decreasing = T),50)
wordcloud(names(wordcount_top), wordcount_top, scale=c(5,0.5),random.order = FALSE, random.color = TRUE, colors = color, family = "font")
Sys.setenv(JAVA_HOME='C:/Program Files/Java/jre1.8.0_144')
library(KoNLP) # 라이브러리 등록
library(wordcloud) # 라이브러리 등록
library(RColorBrewer) # 라이브러리 등록
mergeUserDic(data.frame(c("튜닝"), "ncn"))
data <- readLines("dba.txt", encoding = 'UTF-8')
#useSejongDic() # 세종 한글사전 로딩
buildDictionary(ext_dic = "woorimalsam") # 사전 로딩
data <- sapply(data, extractNoun, USE.NAMES = F)
data_unlist <- unlist(data)
data_unlist <- Filter(function(x){nchar(x)>=2}, data_unlist)
data_unlist <- gsub("DBA", "", data_unlist)
data_unlist<- gsub('[~!@#$%&*()_+=?<>]','',data_unlist)
data_unlist <- gsub('[ㄱ-ㅎ]','',data_unlist)
data_unlist<- gsub('(ㅜ|ㅠ)','',data_unlist)
data_unlist <- gsub("\\d+","",data_unlist)
data_unlist <- Filter(function(x){nchar(x)>=2}, data_unlist)
wordcount <- table(data_unlist)
color <- brewer.pal(12, "Set2")
wordcount_top <-head(sort(wordcount, decreasing = T),50)
wordcloud(names(wordcount_top), wordcount_top, scale=c(5,0.5),random.order = FALSE, random.color = TRUE, colors = color, family = "font")
Sys.setenv(JAVA_HOME='C:/Program Files/Java/jre1.8.0_144')
library(KoNLP) # 라이브러리 등록
library(wordcloud) # 라이브러리 등록
library(RColorBrewer) # 라이브러리 등록
mergeUserDic(data.frame(c("튜닝"), "ncn"))
data <- readLines("dba.txt", encoding = 'UTF-8')
#useSejongDic() # 세종 한글사전 로딩
buildDictionary(ext_dic = "woorimalsam") # 사전 로딩
data <- sapply(data, extractNoun, USE.NAMES = F)
data_unlist <- unlist(data)
data_unlist <- Filter(function(x){nchar(x)>=2}, data_unlist)
data_unlist <- gsub("DBA", "", data_unlist)
data_unlist<- gsub('[~!@#$%&*()_+=?<>]','',data_unlist)
data_unlist <- gsub('[ㄱ-ㅎ]','',data_unlist)
data_unlist<- gsub('(ㅜ|ㅠ)','',data_unlist)
data_unlist <- gsub("\\d+","",data_unlist)
data_unlist <- Filter(function(x){nchar(x)>=2}, data_unlist)
wordcount <- table(data_unlist)
color <- brewer.pal(12, "Set2")
wordcount_top <-head(sort(wordcount, decreasing = T),50)
wordcloud(names(wordcount_top), wordcount_top, scale=c(5,0.5),random.order = FALSE, random.color = TRUE, colors = color, family = "font")
wordcount_top
library(KoNLP) # 라이브러리 등록
library(wordcloud) # 라이브러리 등록
library(RColorBrewer) # 라이브러리 등록
mergeUserDic(data.frame(c("튜닝"), "ncn"))
data <- readLines("dba.txt", encoding = 'UTF-8')
#useSejongDic() # 세종 한글사전 로딩
buildDictionary(ext_dic = "woorimalsam") # 사전 로딩
data <- sapply(data, extractNoun, USE.NAMES = F)
data_unlist <- unlist(data)
data_unlist <- Filter(function(x){nchar(x)>=2}, data_unlist)
data_unlist <- gsub("DBA", "", data_unlist)
data_unlist<- gsub('[~!@#$%&*()_+=?<>]','',data_unlist)
data_unlist <- gsub('[ㄱ-ㅎ]','',data_unlist)
data_unlist<- gsub('(ㅜ|ㅠ)','',data_unlist)
data_unlist <- gsub("\\d+","",data_unlist)
data_unlist <- Filter(function(x){nchar(x)>=2}, data_unlist)
wordcount <- table(data_unlist)
color <- brewer.pal(12, "Set2")
wordcount_top <-head(sort(wordcount, decreasing = T),50)
wordcloud(names(wordcount_top), wordcount_top, scale=c(5,0.5),random.order = FALSE, random.color = TRUE, colors = color, family = "font")
data <- readLines("datascientist.txt", encoding = 'UTF-8')
library(KoNLP) # 라이브러리 등록
library(wordcloud) # 라이브러리 등록
library(RColorBrewer) # 라이브러리 등록
mergeUserDic(data.frame(c("튜닝"), "ncn"))
data <- readLines("datascientist.txt", encoding = 'UTF-8')
#useSejongDic() # 세종 한글사전 로딩
buildDictionary(ext_dic = "woorimalsam") # 사전 로딩
data <- sapply(data, extractNoun, USE.NAMES = F)
data_unlist <- unlist(data)
data_unlist <- Filter(function(x){nchar(x)>=2}, data_unlist)
data_unlist <- gsub("DBA", "", data_unlist)
data_unlist<- gsub('[~!@#$%&*()_+=?<>]','',data_unlist)
data_unlist <- gsub('[ㄱ-ㅎ]','',data_unlist)
data_unlist<- gsub('(ㅜ|ㅠ)','',data_unlist)
data_unlist <- gsub("\\d+","",data_unlist)
data_unlist <- Filter(function(x){nchar(x)>=2}, data_unlist)
wordcount <- table(data_unlist)
color <- brewer.pal(12, "Set2")
wordcount_top <-head(sort(wordcount, decreasing = T),50)
wordcloud(names(wordcount_top), wordcount_top, scale=c(5,0.5),random.order = FALSE, random.color = TRUE, colors = color, family = "font")
library(KoNLP) # 라이브러리 등록
library(wordcloud) # 라이브러리 등록
library(RColorBrewer) # 라이브러리 등록
mergeUserDic(data.frame(c("머신러"), "ncn"))
data <- readLines("datascientist.txt", encoding = 'UTF-8')
#useSejongDic() # 세종 한글사전 로딩
buildDictionary(ext_dic = "woorimalsam") # 사전 로딩
data <- sapply(data, extractNoun, USE.NAMES = F)
data_unlist <- unlist(data)
data_unlist <- Filter(function(x){nchar(x)>=2}, data_unlist)
data_unlist <- gsub("DBA", "", data_unlist)
data_unlist<- gsub('[~!@#$%&*()_+=?<>]','',data_unlist)
data_unlist <- gsub('[ㄱ-ㅎ]','',data_unlist)
data_unlist<- gsub('(ㅜ|ㅠ)','',data_unlist)
data_unlist <- gsub("\\d+","",data_unlist)
data_unlist <- Filter(function(x){nchar(x)>=2}, data_unlist)
wordcount <- table(data_unlist)
color <- brewer.pal(12, "Set2")
wordcount_top <-head(sort(wordcount, decreasing = T),50)
wordcloud(names(wordcount_top), wordcount_top, scale=c(5,0.5),random.order = FALSE, random.color = TRUE, colors = color, family = "font")
library(KoNLP) # 라이브러리 등록
library(wordcloud) # 라이브러리 등록
library(RColorBrewer) # 라이브러리 등록
mergeUserDic(data.frame(c("머신러닝"), "ncn"))
data <- readLines("datascientist.txt", encoding = 'UTF-8')
#useSejongDic() # 세종 한글사전 로딩
buildDictionary(ext_dic = "woorimalsam") # 사전 로딩
data <- sapply(data, extractNoun, USE.NAMES = F)
data_unlist <- unlist(data)
data_unlist <- Filter(function(x){nchar(x)>=2}, data_unlist)
data_unlist <- gsub("DBA", "", data_unlist)
data_unlist<- gsub('[~!@#$%&*()_+=?<>]','',data_unlist)
data_unlist <- gsub('[ㄱ-ㅎ]','',data_unlist)
data_unlist<- gsub('(ㅜ|ㅠ)','',data_unlist)
data_unlist <- gsub("\\d+","",data_unlist)
data_unlist <- Filter(function(x){nchar(x)>=2}, data_unlist)
wordcount <- table(data_unlist)
color <- brewer.pal(12, "Set2")
wordcount_top <-head(sort(wordcount, decreasing = T),50)
wordcloud(names(wordcount_top), wordcount_top, scale=c(5,0.5),random.order = FALSE, random.color = TRUE, colors = color, family = "font")
library(KoNLP) # 라이브러리 등록
library(wordcloud) # 라이브러리 등록
library(RColorBrewer) # 라이브러리 등록
mergeUserDic(data.frame(c("머신러닝"), "ncn"))
data <- readLines("datascientist.txt", encoding = 'UTF-8')
#useSejongDic() # 세종 한글사전 로딩
buildDictionary(ext_dic = "woorimalsam") # 사전 로딩
data <- sapply(data, extractNoun, USE.NAMES = F)
data_unlist <- unlist(data)
data_unlist <- Filter(function(x){nchar(x)>=2}, data_unlist)
data_unlist <- gsub("DBA", "", data_unlist)
data_unlist<- gsub('[~!@#$%&*()_+=?<>]','',data_unlist)
data_unlist <- gsub('[ㄱ-ㅎ]','',data_unlist)
data_unlist<- gsub('(ㅜ|ㅠ)','',data_unlist)
data_unlist <- gsub("\\d+","",data_unlist)
data_unlist <- Filter(function(x){nchar(x)>=2}, data_unlist)
wordcount <- table(data_unlist)
color <- brewer.pal(12, "Set2")
wordcount_top <-head(sort(wordcount, decreasing = T),50)
wordcloud(names(wordcount_top), wordcount_top, scale=c(5,0.5),random.order = FALSE, random.color = TRUE, colors = color, family = "font")
library(KoNLP) # 라이브러리 등록
library(wordcloud) # 라이브러리 등록
library(RColorBrewer) # 라이브러리 등록
mergeUserDic(data.frame(c("머신러닝"), "ncn"))
data <- readLines("datascientist.txt", encoding = 'UTF-8')
#useSejongDic() # 세종 한글사전 로딩
buildDictionary(ext_dic = "woorimalsam") # 사전 로딩
data <- sapply(data, extractNoun, USE.NAMES = F)
data_unlist <- unlist(data)
data_unlist <- Filter(function(x){nchar(x)>=2}, data_unlist)
data_unlist <- gsub("데이터", "", data_unlist)
data_unlist<- gsub('[~!@#$%&*()_+=?<>]','',data_unlist)
data_unlist <- gsub('[ㄱ-ㅎ]','',data_unlist)
data_unlist<- gsub('(ㅜ|ㅠ)','',data_unlist)
data_unlist <- gsub("\\d+","",data_unlist)
data_unlist <- Filter(function(x){nchar(x)>=2}, data_unlist)
wordcount <- table(data_unlist)
color <- brewer.pal(12, "Set2")
wordcount_top <-head(sort(wordcount, decreasing = T),50)
wordcloud(names(wordcount_top), wordcount_top, scale=c(5,0.5),random.order = FALSE, random.color = TRUE, colors = color, family = "font")
